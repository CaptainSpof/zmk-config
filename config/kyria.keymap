/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "bepo-keymap.h"

// layers

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define QWERTY  3


// None/Trans
#define _____ &none
#define t____ &trans

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  TAB  |  B  |  É  |  P   |  O   |  W    |                                          |  ^   |  V    |  D    |  L   |   J   |   Ç  |
// |  ESC  |  A  |  U  |  I   |  E   |  ,    |                                          |  C   |  T    |  S    |  R   |   N   |   M  |
// | SHIFT |  Z  |  Y  |  X   |  .   |  K    | L SHIFT |  LOWER  |  |  RAISE  |   DEL   |  '   |  Q    |  G    |  H   |   F   | CTRL |
//                     |  ⮾   | GUI  | L-ALT |   SPC   |   RET   |  |   RET   |   BSPC  | BSPC | R-ALT |   ⮾   |
			bindings = <
	&kp TAB   &kp BE_B    &kp BE_ECU  &kp BE_P   &kp BE_O   &kp BE_W                       &kp BE_CIRC &kp BE_V &kp BE_D &kp BE_L &kp BE_J &kp BE_CCED
	&mt LCTRL ESC &hm LSHFT BE_A &hm LCTRL BE_U &hm LALT BE_I &hm LGUI BE_E &kp BE_COMMA       &kp BE_C    &kp BE_T &kp BE_S &kp BE_R &kp BE_N &kp BE_M
	&kp LSHFT &kp BE_Z  &kp BE_Y &kp BE_X &kp BE_DOT &kp BE_K &kp LSHFT &mo LOWER        &mo RAISE &kp DEL   &kp BE_QUOT &kp BE_Q &kp BE_G  &kp BE_H &kp BE_F &kp RCTRL
	                                &kp C_PP &kp LALT &mt LSHFT SPC  &lt LOWER RET &none       &kp RET   &lt RAISE BSPC  &mt RSHFT BSPC &kp RALT &none
			>;

            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};


		lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  "  |  «  |  »   |  (   |  )    |                                          |  @   |  +    |  -    |  /   |   *   |   =  |
// |  TAB  |  A  |  S  |  D   |  F   |  G    |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B    | L SHIFT | L SHIFT |  | L SHIFT |   DEL   |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     |  ⮾   | GUI  | L-ALT |   SPC   |   RET   |  |   RET   |   BSPC  | BSPC | R-ALT |   ⮾   |
			bindings = <
	&kp ESC   &kp BE_DQUOT &kp BE_LESS &kp BE_GREAT &kp BE_LBRA &kp BE_RBRA                &kp BE_AT &kp BE_PLUS &kp BE_MINUS &kp BE_SLASH &kp BE_AST &kp BE_EQUAL
	t____     t____        t____       t____        t____       t____                      t____     t____       t____        t____        t____      t____
	t____     t____        t____       t____        t____       t____                      t____     t____       t____        t____        t____      t____
	                                     &none   t____   t____   t____   t____    t____   t____   &kp DEL   t____   &none
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		raise_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5    |                                          |  6   |  7    |  8    |  9   |   0   |   \  |
// |  TAB  |  A  |  S  |  D   |  F   |  G    |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B    | L SHIFT | L SHIFT |  | L SHIFT |   DEL   |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     |  ⮾   | GUI  | L-ALT |   SPC   |   RET   |  |   RET   |   BSPC  | BSPC | R-ALT |   ⮾   |
			bindings = <
	&kp ESC   &kp BE_1 &kp BE_2 &kp BE_3 &kp BE_4 &kp BE_5                                           &kp BE_6 &kp BE_7 &kp BE_8 &kp BE_9 &kp BE_0 &kp BE_EQUAL
	t____     t____        t____       t____        t____       t____                      t____     t____       t____        t____        t____      t____
	t____     t____        t____       t____        t____       t____                      t____     t____       t____        t____        t____      t____
	                                     &none   t____   t____   t____   t____    t____   t____   &kp DEL   t____   &none
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		qwerty_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T    |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  TAB  |  A  |  S  |  D   |  F   |  G    |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B    | L SHIFT | L SHIFT |  | L SHIFT |   DEL   |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     |  ⮾   | GUI  | L-ALT |   SPC   |   RET   |  |   RET   |   BSPC  | BSPC | R-ALT |   ⮾   |
			bindings = <
	&kp ESC   &kp Q       &kp W       &kp E      &kp R      &kp T                          &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &hm LSHFT A &hm LCTRL S &hm LALT D &hm LGUI F &kp G                          &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &mo LOWER        &mo RAISE &kp DEL   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                &none         &kp A &kp LALT &kp SPACE &kp RET     &kp RET   &kp BSPC  &kp BSPC &kp RALT &none
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	};
};
